[project]
name = "{{project_name}}"
version = "0.0.3"
description = "HTML-first component library that delivers copy and paste snippets powered by HTMX for rapid UI construction"
readme = "README.md"
requires-python = ">=3.12"
dependencies = []

[dependency-groups]
dev = [
    "mypy>=1.18.2",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "ruff>=0.13.1",
]

[project.scripts]
dev = "{{package_name}}.scripts.dev:main"


[build-system]
requires = ["hatchling>=1.25"]
build-backend = "hatchling.build"

[tool.uv]
# Ensure the development dependencies are included by default when uv manages the
# project environment (uv sync / uv run).
default-groups = ["dev"]

[tool.hatch.build.targets.wheel]
packages = ["src/{{package_name}}"]

[tool.ruff]
target-version = "py312"
line-length = 100
extend-exclude = [
    ".venv",
    "dist",
    "build",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort (imports)
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "SIM", # flake8-simplify
]
ignore = []

[tool.ruff.format]
line-ending = "lf"
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.mypy]
python_version = "3.12"
warn_unused_ignores = true
ignore_missing_imports = true
check_untyped_defs = true
no_implicit_optional = true
disallow_incomplete_defs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.commitizen]
name = "{{project_name}}"
# Read version from [project] (PEP 621) so a single source of truth is used.
version_provider = "pep621"
tag_format = "v$version"
update_changelog_on_bump = true
changelog_file = "CHANGELOG.md"

